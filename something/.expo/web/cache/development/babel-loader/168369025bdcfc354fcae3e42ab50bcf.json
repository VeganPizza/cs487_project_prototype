{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\vsams\\\\Desktop\\\\GitHub\\\\CS487\\\\cs487_project_prototype\\\\something\\\\screens\\\\LoginScreen.js\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport THEME from \"../constants/THEME\";\nimport Header from \"../navigation/Header\";\nimport { TextInput, Avatar } from \"react-native-paper\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar LoginScreen = function LoginScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      typing = _useState2[0],\n      setTyping = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    navigation: props.navigation,\n    title: \"Login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: \"column\",\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      marginVertical: 20,\n      justifyContent: \"center\",\n      opacity: THEME.isAndroid && typing ? 0.3 : 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [THEME.TEXT.T11, {\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      letterSpacing: 4\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"APP NAME\"), React.createElement(Text, {\n    style: [THEME.TEXT.T5, {\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Lorem Ipsum\")), React.createElement(View, {\n    style: {\n      marginVertical: '5%',\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      opacity: THEME.isAndroid && typing ? 0.2 : 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      maxHeight: height / 4,\n      maxWidth: width / 2,\n      alignSelf: \"center\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"./../images/Logo.png\"),\n    style: {\n      width: width / 2.5,\n      height: height / 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: {\n      bottom: 65,\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(Avatar.Icon, {\n    icon: \"account\",\n    style: {\n      backgroundColor: \"transparent\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    underlineColor: THEME.COLORS.GREEN,\n    mode: \"flat\",\n    label: \"Username\",\n    style: {\n      backgroundColor: \"transparent\",\n      color: \"white\",\n      width: width * .75\n    },\n    theme: {\n      colors: {\n        text: \"white\",\n        placeholder: \"white\",\n        primary: THEME.COLORS.GREEN\n      }\n    },\n    onFocus: function onFocus() {\n      return setTyping(true);\n    },\n    onBlur: function onBlur() {\n      return setTyping(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, React.createElement(Avatar.Icon, {\n    icon: \"lock\",\n    style: {\n      backgroundColor: \"transparent\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    underlineColor: THEME.COLORS.GREEN,\n    mode: \"flat\",\n    label: \"Password\",\n    style: {\n      backgroundColor: \"transparent\",\n      color: \"white\",\n      marginBottom: 10,\n      width: width * .75\n    },\n    theme: {\n      colors: {\n        text: \"white\",\n        placeholder: \"white\",\n        primary: THEME.COLORS.GREEN\n      }\n    },\n    onFocus: function onFocus() {\n      return setTyping(true);\n    },\n    onBlur: function onBlur() {\n      return setTyping(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })))), React.createElement(View, {\n    style: {\n      marginVertical: 20,\n      flex: 1,\n      width: '80%',\n      alignItems: 'center',\n      alignSelf: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [THEME.BUTTON.LOGIN],\n    onPress: function onPress() {\n      return props.navigation.navigate(\"UserScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: THEME.TEXT.T7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Login\")))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.COLORS.BACKGROUND,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/Users/vsams/Desktop/GitHub/CS487/cs487_project_prototype/something/screens/LoginScreen.js"],"names":["StatusBar","React","useState","THEME","Header","TextInput","Avatar","Dimensions","get","width","height","LoginScreen","props","typing","setTyping","styles","container","navigation","flexDirection","flex","marginVertical","justifyContent","opacity","isAndroid","TEXT","T11","textAlign","fontWeight","letterSpacing","T5","alignItems","maxHeight","maxWidth","alignSelf","require","bottom","backgroundColor","COLORS","GREEN","color","colors","text","placeholder","primary","marginBottom","BUTTON","LOGIN","navigate","T7","StyleSheet","create","BACKGROUND"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Image,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport THEME from \"../constants/THEME\";\r\nimport Header from \"../navigation/Header\";\r\nimport {  TextInput, Avatar } from \"react-native-paper\";\r\n// import Logo from '../images/Logo'\r\nconst { width, height } = Dimensions.get(\"screen\");\r\nconst LoginScreen = (props) => {\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Header navigation={props.navigation} title={\"Login\"} />\r\n      <View style={{ flexDirection: \"column\", flex: 1 }}>\r\n        <View\r\n          style={{\r\n            marginVertical: 20,\r\n            justifyContent: \"center\",\r\n            opacity: THEME.isAndroid && typing ? 0.3 : 1,\r\n          }}\r\n        >\r\n          <Text\r\n            style={[\r\n              THEME.TEXT.T11,\r\n              { textAlign: \"center\", fontWeight: \"bold\", letterSpacing: 4 },\r\n            ]}\r\n          >\r\n            APP NAME\r\n          </Text>\r\n          <Text\r\n            style={[THEME.TEXT.T5, { textAlign: \"center\", fontWeight: \"bold\" }]}\r\n          >\r\n            Lorem Ipsum\r\n          </Text>\r\n        </View>\r\n        <View\r\n          style={{\r\n            marginVertical:'5%',\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n            opacity: THEME.isAndroid && typing ? 0.2 : 1,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              maxHeight: height / 4,\r\n              maxWidth: width / 2,\r\n              alignSelf: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"./../images/Logo.png\")}\r\n              style={{ width: width / 2.5, height: height / 4 }}\r\n            ></Image>\r\n          </View>\r\n\r\n          {/* <IconButton icon='robot' size={width/4}></IconButton> */}\r\n        </View>\r\n        <View style={{  bottom:65, width:'100%', }}>\r\n          <ScrollView>\r\n          <View style={{flexDirection:'row', width:'100%'}}>\r\n            <Avatar.Icon icon=\"account\" style={{backgroundColor:\"transparent\"}}/>\r\n\r\n          \r\n            <TextInput\r\n              underlineColor={THEME.COLORS.GREEN}\r\n              mode=\"flat\"\r\n              label=\"Username\"\r\n              style={{ backgroundColor: \"transparent\", color: \"white\", width:width*.75}}\r\n              theme={{\r\n                colors: {\r\n                  text: \"white\",\r\n                  placeholder: \"white\",\r\n                  primary: THEME.COLORS.GREEN,\r\n                  \r\n                },\r\n              }}\r\n              onFocus={() => setTyping(true)}\r\n              onBlur={() => setTyping(false)}\r\n            ></TextInput>\r\n          </View>\r\n\r\n          <View style={{flexDirection:'row', width:'100%'}}>\r\n            <Avatar.Icon icon=\"lock\" style={{backgroundColor:\"transparent\"}}/>\r\n\r\n            <TextInput\r\n              underlineColor={THEME.COLORS.GREEN}\r\n              mode=\"flat\"\r\n              label=\"Password\"\r\n              style={{\r\n                backgroundColor: \"transparent\",\r\n                color: \"white\",\r\n                marginBottom: 10,\r\n                width:width*.75\r\n              }}\r\n              theme={{\r\n                colors: {\r\n                  text: \"white\",\r\n                  placeholder: \"white\",\r\n                  primary: THEME.COLORS.GREEN,\r\n                },\r\n              }}\r\n              onFocus={() => setTyping(true)}\r\n              onBlur={() => setTyping(false)}\r\n            ></TextInput>\r\n          </View>\r\n          </ScrollView>\r\n         \r\n        </View>\r\n        <View\r\n          style={{\r\n            marginVertical: 20,\r\n         \r\n           flex:1,\r\n           width:'80%',\r\n           alignItems:'center',\r\n           alignSelf:'center',\r\n          }}\r\n        >\r\n          <TouchableOpacity style={[THEME.BUTTON.LOGIN,]} onPress={()=>props.navigation.navigate(\"UserScreen\")}>\r\n            <Text style={THEME.TEXT.T7}>Login</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: THEME.COLORS.BACKGROUND,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}