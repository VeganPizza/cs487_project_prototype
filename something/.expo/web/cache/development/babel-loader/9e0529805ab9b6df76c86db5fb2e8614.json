{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\vsams\\\\Desktop\\\\GitHub\\\\CS487\\\\cs487_project_prototype\\\\something\\\\screens\\\\UserScreen.js\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport THEME from \"../constants/THEME\";\nimport Header from \"../navigation/Header\";\nimport { TextInput, Avatar } from \"react-native-paper\";\nimport HomeScreen from \"./UserScreens/HomeScreen\";\nimport { TabView, SceneMap, TabBar } from 'react-native-tab-view';\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar FirstRoute = function FirstRoute() {\n  return React.createElement(HomeScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n};\n\nvar SecondRoute = function SecondRoute() {\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  });\n};\n\nvar UserScreen = function UserScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      typing = _useState2[0],\n      setTyping = _useState2[1];\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var _React$useState3 = React.useState([{\n    key: 'home',\n    title: 'Home'\n  }, {\n    key: 'classes',\n    title: 'Classes'\n  }]),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      routes = _React$useState4[0];\n\n  var renderScene = SceneMap({\n    home: FirstRoute,\n    classes: SecondRoute\n  });\n  var layout = useWindowDimensions();\n\n  var renderTabBar = function renderTabBar(props) {\n    return React.createElement(TabBar, _extends({}, props, {\n      renderLabel: function renderLabel(_ref) {\n        var route = _ref.route,\n            focused = _ref.focused,\n            color = _ref.color;\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: THEME.TEXT.T5,\n          weight: \"bold\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }, route.title));\n      },\n      indicatorStyle: {\n        backgroundColor: \"white\"\n      },\n      style: styles.tabBar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    navigation: props.navigation,\n    title: \"User Menu\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      width: '100%',\n      height: height - 10,\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(TabView, {\n    renderTabBar: renderTabBar,\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: {\n      width: layout.width\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.COLORS.BACKGROUND,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  tabBar: {\n    backgroundColor: THEME.COLORS.BACKGROUND,\n    color: \"white\",\n    borderTopRightRadius: 30,\n    borderTopLeftRadius: 30,\n    borderColor: THEME.COLORS.GREEN,\n    borderWidth: 1,\n    borderBottomColor: 'transparent',\n    borderBottomWidth: 0\n  }\n});\nexport default UserScreen;","map":{"version":3,"sources":["C:/Users/vsams/Desktop/GitHub/CS487/cs487_project_prototype/something/screens/UserScreen.js"],"names":["StatusBar","React","useState","THEME","Header","TextInput","Avatar","HomeScreen","TabView","SceneMap","TabBar","Dimensions","get","width","height","FirstRoute","SecondRoute","flex","UserScreen","props","typing","setTyping","index","setIndex","key","title","routes","renderScene","home","classes","layout","useWindowDimensions","renderTabBar","route","focused","color","flexDirection","alignItems","TEXT","T5","backgroundColor","styles","tabBar","container","navigation","marginTop","StyleSheet","create","COLORS","BACKGROUND","justifyContent","borderTopRightRadius","borderTopLeftRadius","borderColor","GREEN","borderWidth","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Image,\r\n  ScrollView,\r\n  useWindowDimensions\r\n} from \"react-native\";\r\nimport THEME from \"../constants/THEME\";\r\nimport Header from \"../navigation/Header\";\r\nimport { TextInput, Avatar } from \"react-native-paper\";\r\nimport HomeScreen from \"./UserScreens/HomeScreen\"\r\nimport { TabView, SceneMap, TabBar } from 'react-native-tab-view';\r\n\r\n// import Logo from '../images/Logo'\r\nconst { width, height } = Dimensions.get(\"screen\");\r\nconst FirstRoute = () => (\r\n    <HomeScreen/>\r\n  );\r\n  \r\n  const SecondRoute = () => (\r\n    <View style={{ flex: 1,  }} />\r\n  );\r\n\r\nconst UserScreen = (props) => {\r\n  const [typing, setTyping] = useState(false);\r\n  const [index, setIndex] = React.useState(0);\r\n  const [routes] = React.useState([\r\n    { key: 'home', title: 'Home' },\r\n    { key: 'classes', title: 'Classes' },\r\n  ]);\r\n  const renderScene = SceneMap({\r\n    home: FirstRoute,\r\n    classes: SecondRoute,\r\n  });\r\n  const layout = useWindowDimensions();\r\n\r\n  const renderTabBar = (props) => (\r\n    <TabBar\r\n      {...props}\r\n      renderLabel={({ route, focused, color }) => (\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <Text style={THEME.TEXT.T5} weight='bold'>{route.title}</Text>\r\n        </View>\r\n      )}\r\n      indicatorStyle={{ backgroundColor: \"white\" }}\r\n      style={styles.tabBar}\r\n    />\r\n  );\r\n\r\n \r\n  return (\r\n    <View style={styles.container}>\r\n      <Header navigation={props.navigation} title={\"User Menu\"} />\r\n      <View style={{width:'100%', height:height-10, marginTop:10}}>\r\n      <TabView\r\n      renderTabBar={renderTabBar}\r\n      navigationState={{ index, routes }}\r\n      renderScene={renderScene}\r\n      onIndexChange={setIndex}\r\n      initialLayout={{ width: layout.width }\r\n    }\r\n\r\n    />\r\n      </View>\r\n         \r\n        \r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: THEME.COLORS.BACKGROUND,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  tabBar: {\r\n    backgroundColor: THEME.COLORS.BACKGROUND,\r\n    color: \"white\",\r\n    borderTopRightRadius: 30,\r\n    borderTopLeftRadius: 30,\r\n    borderColor:THEME.COLORS.GREEN,\r\n    borderWidth:1,\r\n    borderBottomColor:'transparent',\r\n    borderBottomWidth:0,\r\n    \r\n  },\r\n});\r\n\r\nexport default UserScreen;\r\n"]},"metadata":{},"sourceType":"module"}